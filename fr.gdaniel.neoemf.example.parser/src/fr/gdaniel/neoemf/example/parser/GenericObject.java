package fr.gdaniel.neoemf.example.parser;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Dummy object generated by the {@link CustomEventListener}.
 */
public class GenericObject {
	
	private long id;
	
	private String className;
	
	private Map<String, Object> attributes = new HashMap<>();
	
	private Map<String, List<Long>> references = new HashMap<>();
	
	public GenericObject() {
		
	}
	
	public void setId(Long newId) {
		this.id = newId;
	}
	
	public long getId() {
		return this.id;
	}
	
	public void setClassName(String newClassName) {
		this.className = newClassName;
	}
	
	public String getClassName() {
		return this.className;
	}
	
	public Map<String, Object> getAttributes() {
		return this.attributes;
	}
	
	public void addReference(String name, Long id) {
		this.references.putIfAbsent(name, new ArrayList<>());
		List<Long> referencedIds = this.references.get(name);
		referencedIds.add(id);
	}
	
	public Map<String, List<Long>> getReferences() {
		return this.references;
	}
	
	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append(this.className);
		builder.append("(id = ");
		builder.append(this.id);
		builder.append(")");
		builder.append(" {");
		builder.append("\n");
		this.attributes.forEach((k, v) -> builder.append("\t").append(k).append(" = ").append(v.toString()).append("\n"));
		this.references.forEach((k, v) -> builder.append("\t").append(k).append(" = ").append(v.toString()).append("\n"));
		builder.append("}");
		return builder.toString();
	}

}
